name: Build Electron Apps

on:
  workflow_dispatch: {}

env:
  BASEMAP_BUCKET: links-soma
  BUILDS_BUCKET: links-soma
  WORKLOAD_IDENTITY_PROVIDER: ${{ secrets.WORKLOAD_IDENTITY_PROVIDER }}
  SERVICE_ACCOUNT: ${{ secrets.SERVICE_ACCOUNT }}

permissions:
  contents: read
  id-token: write

jobs:
  build:
    runs-on: windows-latest

    strategy:
      matrix:
        region:
          [hokkaido, tohoku, kanto, chubu, kansai, chugoku, shikoku, kyushu]
      fail-fast: false

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"
          cache-dependency-path: "**/package-lock.json"

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"
          cache: "pip"

      - name: Install Poetry
        shell: pwsh
        run: |
          python -m pip install --upgrade pip
          pip install poetry==1.8.3

      - name: Install dependencies
        env:
          HUSKY: "0"
        run: |
          npm ci
          cd ml && poetry install --no-root

      - name: Google Auth
        uses: google-github-actions/auth@v2
        with:
          service_account: ${{ env.SERVICE_ACCOUNT }}
          workload_identity_provider: ${{ env.WORKLOAD_IDENTITY_PROVIDER }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - name: Build ML
        working-directory: ./ml
        shell: pwsh
        run: |
          ./build.ps1

      - name: Download pmtiles
        shell: pwsh
        run: |
          gcloud storage cp gs://${{ env.BASEMAP_BUCKET }}/basemaps/${{ matrix.region }}/basemap.pmtiles app/public/
          echo "Download completed for ${{ matrix.region }}"

      - name: Build App
        working-directory: ./app
        run: npm run make

      - name: Package ZIP
        shell: pwsh
        run: |
          # $version = (Get-Content "app/package.json" | ConvertFrom-Json).version
          $finalZipName = "links-soma.zip"
          Compress-Archive -Path app/out/links_soma-win32-x64/* -DestinationPath $finalZipName
          gsutil cp $finalZipName gs://${{ env.BUILDS_BUCKET }}/build/${{ matrix.region }}/

      - name: Upload App
        uses: actions/upload-artifact@v4
        with:
          name: links-soma-${{ matrix.region }}
          path: app/out/links_soma-win32-x64
