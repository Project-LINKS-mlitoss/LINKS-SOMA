name: Electron Build

on:
  workflow_dispatch: {}

env:
  BASEMAP_BUCKET: links-soma
  BUILDS_BUCKET: links-soma
  WORKLOAD_IDENTITY_PROVIDER: ${{ secrets.WORKLOAD_IDENTITY_PROVIDER }}
  SERVICE_ACCOUNT: ${{ secrets.SERVICE_ACCOUNT }}

permissions:
  contents: read
  id-token: write

jobs:
  build-once:
    runs-on: windows-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"
          cache-dependency-path: "**/package-lock.json"

      - name: Set up GCloud Auth
        id: auth
        uses: google-github-actions/auth@v2
        with:
          service_account: ${{ env.SERVICE_ACCOUNT }}
          workload_identity_provider: ${{ env.WORKLOAD_IDENTITY_PROVIDER }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - name: Download default basemap
        shell: pwsh
        run: |
          gsutil cp gs://${{ env.BASEMAP_BUCKET }}/basemaps/chubu/basemap.pmtiles ./app/public/basemap.pmtiles

      - name: Install dependencies
        run: npm ci
      - name: Setup home directory for PyInstaller
        shell: cmd
        run: |
          mkdir "C:\Users\temp"
          echo HOME=C:\Users\temp>> %GITHUB_ENV%
          echo USERPROFILE=C:\Users\temp>> %GITHUB_ENV%

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"
          cache: "pip"

      - name: Install Poetry
        shell: pwsh
        run: |
          python -m pip install --upgrade pip
          pip install poetry==1.8.3
          pip install pyinstaller

      - name: Build ML & Electron App
        shell: pwsh
        run: |
          cd ml && poetry install --no-root && npm run build
          cd ../app && npm run make

      - name: Upload base artifact
        uses: actions/upload-artifact@v4
        with:
          name: links-soma-win32-x64
          path: app/out/links-soma-win32-x64

  package-region-specific:
    needs: build-once
    runs-on: windows-latest

    strategy:
      matrix:
        region:
          [chubu]
          # [hokkaido, tohoku, kanto, chubu, kansai, chugoku, shikoku, kyushu]
      fail-fast: false

    steps:
      - uses: actions/checkout@v4

      - name: Set up GCloud Auth
        id: auth
        uses: google-github-actions/auth@v2
        with:
          service_account: ${{ env.SERVICE_ACCOUNT }}
          workload_identity_provider: ${{ env.WORKLOAD_IDENTITY_PROVIDER }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - name: Download base artifact
        uses: actions/download-artifact@v4
        with:
          name: links-soma-win32-x64
          path: links-soma-win32-x64

      - name: Replace basemap for region (${{ matrix.region }})
        shell: pwsh
        run: |
          gsutil cp gs://${{ env.BASEMAP_BUCKET }}/basemaps/${{ matrix.region }}/basemap.pmtiles links-soma-win32-x64/resources/basemap.pmtiles

      - name: Package ZIP
        shell: pwsh
        run: |
          # $version = (Get-Content "app/package.json" | ConvertFrom-Json).version
          $finalZipName = "links-soma.zip"
          Compress-Archive -Path links-soma-win32-x64/* -DestinationPath $finalZipName
          gsutil cp $finalZipName gs://${{ env.BUILDS_BUCKET }}/build/${{ matrix.region }}/
