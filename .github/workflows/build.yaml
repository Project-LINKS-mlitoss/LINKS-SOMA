name: Build Combined Zip

on:
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

jobs:
  build-region-zip:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        region:
          [hokkaido, tohoku, kanto, chubu, kansai, chugoku, shikoku, kyushu]
      fail-fast: false
    env:
      GCS_BUCKET: links-soma
      WORKLOAD_IDENTITY_PROVIDER: ${{ secrets.WORKLOAD_IDENTITY_PROVIDER }}
      SERVICE_ACCOUNT: ${{ secrets.SERVICE_ACCOUNT }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up GCloud Auth
        uses: google-github-actions/auth@v2
        with:
          service_account: ${{ env.SERVICE_ACCOUNT }}
          workload_identity_provider: ${{ env.WORKLOAD_IDENTITY_PROVIDER }}

      - name: Setup Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - name: Download files for region ${{ matrix.region }}
        run: |
          mkdir -p downloads/soma/${{ matrix.region }}
          mkdir -p downloads/geocoding
          mkdir -p downloads/converter

          # Download region-specific soma data
          gcloud storage cp gs://$GCS_BUCKET/build/${{ matrix.region }}/links-soma.zip downloads/soma/${{ matrix.region }}/links-soma.zip || echo "Could not download soma data for ${{ matrix.region }}"

          # Download common files
          gcloud storage cp gs://$GCS_BUCKET/build/geocoding/links-soma-geocoding.zip downloads/geocoding/links-soma-geocoding.zip
          gcloud storage cp gs://$GCS_BUCKET/build/converter/links-soma-converter.zip downloads/converter/links-soma-converter.zip

      - name: Create zip file for region ${{ matrix.region }}
        run: |
          mkdir -p region_zips
          mkdir -p temp/${{ matrix.region }}

          # Check if region-specific soma file exists
          if [ -f "downloads/soma/${{ matrix.region }}/links-soma.zip" ]; then
            # Extract region-specific soma data
            unzip -q downloads/soma/${{ matrix.region }}/links-soma.zip -d temp/${{ matrix.region }}/soma
          else
            echo "Warning: downloads/soma/${{ matrix.region }}/links-soma.zip not found"
            mkdir -p temp/${{ matrix.region }}/soma
          fi

          # Check if geocoding file exists
          if [ -f "downloads/geocoding/links-soma-geocoding.zip" ]; then
            # Extract common geocoding data
            unzip -q downloads/geocoding/links-soma-geocoding.zip -d temp/${{ matrix.region }}/geocoding
          else
            echo "Warning: downloads/geocoding/links-soma-geocoding.zip not found"
            mkdir -p temp/${{ matrix.region }}/geocoding
          fi

          # Check if converter file exists
          if [ -f "downloads/converter/links-soma-converter.zip" ]; then
            # Extract common conv data
            unzip -q downloads/converter/links-soma-converter.zip -d temp/${{ matrix.region }}/converter
          else
            echo "Warning: downloads/converter/links-soma-converter.zip not found"
            mkdir -p temp/${{ matrix.region }}/converter
          fi

          # Create zip for this region
          (cd temp/${{ matrix.region }} && zip -r ../../region_zips/${{ matrix.region }}.zip . || echo "Error creating zip for ${{ matrix.region }}")

      - name: Upload region zip to GCS
        run: |
          if [ -f "region_zips/${{ matrix.region }}.zip" ]; then
            gsutil cp region_zips/${{ matrix.region }}.zip gs://$GCS_BUCKET/combined/${{ matrix.region }}.zip
          else
            echo "Warning: region_zips/${{ matrix.region }}.zip not found, skipping upload"
            exit 1
          fi

      - name: Upload region zip as artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.region }}-zip
          path: region_zips/${{ matrix.region }}.zip
